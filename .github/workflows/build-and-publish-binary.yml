
name: Build Binaries
on:
  push:
    branches: [ main ]
    paths-ignore:
      - '.gitignore'
      - 'build-and-publish-binary.yml'
      - 'CODE_OF_CONDUCT.md'
      - 'CONTRIBUTING.md'
      - 'LICENSE.md'
      - 'README.md'
      - '.github/**'
permissions:
  contents: write
env:
  GIT_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  release-build:
    runs-on: ubuntu-20.04
    steps:
      - name: Get Branch Name
        run: echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"
        id: github_info
      - name: Checkout ${{ steps.github_info.outputs.branch }}
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.github_info.outputs.branch }}
      - uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
      - name: Build MultiArch Binaries
        run: bash multi-arch-build.sh
      - name: Get Package Version
        run: |
          VER=$(cat VERSION)
          echo "VERSION=$VER" >> $GITHUB_ENV
      - name: Publish Binaries
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: output/*
          tag: "v${{ env.VERSION }}"
          release_name: "v ${{ env.VERSION }}"
          overwrite: true
          file_glob: true

  update-build:
    runs-on: ubuntu-20.04
    steps:
      - name: Get Branch Name
        run: echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"
        id: github_info
      - name: Checkout ${{ steps.github_info.outputs.branch }}
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.github_info.outputs.branch }}
      - uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
      - name: Run Compiler
        run: |
          go get github.com/anaskhan96/soup
          go get golang.org/x/exp
          go run .
      - name: Checkout Project
        env:
          PToken: ${{ secrets.PToken }}
        run: |
          bash checkout.sh
          ls -l
      - run: |
          VER=$(cat VERSION)
          echo "VERSION=$VER" >> $GITHUB_ENV
      - name: Update Compiled GoBotApiOfficial
        uses: cpina/github-action-push-to-another-repository@v1.4.2
        env:
          API_TOKEN_GITHUB: "${{ secrets.API_TOKEN_GITHUB }}"
        with:
          commit-message: ${{ github.event.head_commit.message }}
          source-directory: './gobotapi'
          destination-github-username: 'GoBotApiOfficial'
          user-name: 'GoBotApiOfficial'
          destination-repository-name: 'gobotapi'
          user-email: <>
          target-branch: main
